{"version":3,"sources":["components/layout/SigninLinks.js","store/actions/authActions.js","components/layout/SignoutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/home/ProjectSummary.js","components/home/ProjectList.js","components/dashboard/Dashboard.js","components/home/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/home/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["mapDispatchToProps","signOut","dispatch","getState","_ref2","getFirebase","auth","then","type","catch","connect","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignoutLinks","state","firebase","links","uid","layout_SigninLinks","layout_SignoutLinks","Notification","notification","console","log","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","pr","concat","home_ProjectSummary","compose","firestore","ordered","notifications","firestoreConnect","collection","orderBy","limit","home_ProjectList","dashboard_Notification","react_router","ownProps","match","params","data","Signin","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","_this$props","error","onSubmit","htmlFor","onChange","Component","mapDIspatchToProps","creds","signInWithEmailAndPassword","err","payload","authError","Signup","firstName","lastName","signUp","mapDispatchToprops","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorID","add","objectSpread","authorId","Date","App","layout_Navbar","exact","path","component","Dashboard","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b24da08.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SigninLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a href=\"#s\" onClick={props.signOut}>\n          Log Out\n        </a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = {\n  signOut\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SigninLinks);\n","export const signIn = creds => (dispatch, getState, { getFirebase }) => {\n  const firebase = getFirebase();\n\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(creds.email, creds.password)\n    .then(() => {\n      dispatch({ type: \"LOGIN_SUCCESS\" });\n    })\n    .catch(err => {\n      dispatch({ type: \"LOGIN_ERROR\", payload: err });\n    });\n};\n\nexport const signOut = () => (dispatch, getState, { getFirebase }) => {\n  const firebase = getFirebase();\n\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      dispatch({ type: \"SIGNOUT_SUCCESS\" });\n    })\n    .catch();\n};\n\nexport const signUp = newUser => (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(newUser.email, newUser.password)\n    .then(resp => {\n      return firestore\n        .collection(\"users\")\n        .doc(resp.user.uid)\n        .set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        })\n        .then(() => {\n          dispatch({ type: \"SIGNUP_SUCCESS\" });\n        });\n    })\n    .catch(err => {\n      dispatch({ type: \"SIGNUP_ERROR\", payload: err });\n    });\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignoutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignoutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SigninLinks from \"./SigninLinks\";\nimport SignoutLinks from \"./SignoutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  //console.log(\"auth \", props);\n  const links = auth.uid ? <SigninLinks profile={profile} /> : <SignoutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          MarioPlan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notification = props => {\n  const { notification } = props;\n  console.log(notification);\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notification</span>\n          <ul className=\"notification\">\n            {notification &&\n              notification.map(item => {\n                //debugger;\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(pr => {\n          return (\n            <Link key={pr.id} to={`/project/${pr.id}`}>\n              <ProjectSummary project={pr} />;\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport Notification from \"./Notification\";\nimport ProjectList from \"../home/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dashboard = props => {\n  const { projects, auth, notification } = props;\n\n  console.log(notification);\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <ProjectList projects={projects} />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notification notification={notification} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notification: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    {}\n  ),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment'\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    return (\n      <div className=\" container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const currentProject = projects ? projects[id] : null;\n  return {\n    project: currentProject,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class Signin extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { error, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">{error && <p>{error}</p>}</div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDIspatchToProps = {\n  signIn\n};\nconst mapStateToProps = state => {\n  return {\n    error: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDIspatchToProps\n)(Signin);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nexport class Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.signUp(this.state)\n  };\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    //console.log(authError)\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError && <p>{authError}</p>}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToprops = {\n  signUp\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Signup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              onChange={this.handleChange}\n              className=\"materialize-textarea\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = {\n  createProject\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => (\n  dispatch,\n  getState,\n  { getFirebase, getFirestore }\n) => {\n  const firestore = getFirestore();\n  const profile = getState().firebase.profile\n  const authorID = getState().firebase.auth.uid\n  firestore\n    .collection(\"projects\")\n    .add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorID,\n      createdAt: new Date()\n    })\n    .then(() => {\n      dispatch({ type: \"CREATE_PROJECT\", payload: project });\n    })\n    .catch(err => {\n      dispatch({ type: \"CREATE_PROJECT_FAIL\", payload: err });\n    });\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/layout/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/home/ProjectDetails\";\nimport Signin from \"./components/auth/Signin\";\nimport Signup from \"./components/auth/Signup\";\nimport CreateProject from \"./components/home/CreateProject\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/project/:id\" component={ProjectDetails} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/create\" component={CreateProject} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      //console.log(\"ERROR LOginnnnnn\");\n      return {\n        ...state,\n        authError: \"LOGIN ERROR\"\n      };\n    case \"LOGIN_SUCCESS\":\n      //console.log(\"Login Success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      //console.log(\"SIgnout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      //console.log(\"signup Success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      //console.log(\"ERROR SIGNUP\");\n      return {\n        ...state,\n        authError: action.payload.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    {\n      id: \"1\",\n      title: \"Frontend BuildWeek\",\n      content: \"aloha aloha nansn blah blah blah\"\n    },\n    {\n      id: \"2\",\n      title: \"UserInterface BuildWeek\",\n      content: \"aloha aloha nansn blah blah blah\"\n    },\n    {\n      id: \"3\",\n      title: \"Backend BuildWeek\",\n      content: \"aloha aloha nansn blah blah blah\"\n    }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project \", action.payload);\n      return state;\n    case \"CREATE_PROJECT_FAIL\":\n      console.log(\"PROJECT ERROR \", action.payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCNPtcaj26mDPgn5U8h-6FJQFU1-DA5A7U\",\n  authDomain: \"projects-plan-486dc.firebaseapp.com\",\n  databaseURL: \"https://projects-plan-486dc.firebaseio.com\",\n  projectId: \"projects-plan-486dc\",\n  storageBucket: \"projects-plan-486dc.appspot.com\",\n  messagingSenderId: \"1044138337283\",\n  appId: \"1:1044138337283:web:d5b8430727f814d4\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\"; //binding layer\nimport thunk from \"redux-thunk\";\nimport { getFirestore, reduxFirestore } from \"redux-firestore\";\nimport { getFirebase, reactReduxFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirebase,\n        getFirestore\n      })\n    ),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      userProfile: 'users',\n      useFirestoreForProfile: true,\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}